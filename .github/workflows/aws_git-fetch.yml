name: AWS git fetch
on:
  push:
    branches: ['master']

jobs:
  run_in_EC2:
    runs-on: ubuntu-latest
    steps:

      - name: Deploy over SSH
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{vars.PAID_CLOUD_HOST}} 
          username: ${{secrets.HETZNER_USER}}
          key: ${{secrets.HETZNER_SSH_PRIVATE_KEY}}
          passphrase: ${{ secrets.PRIVATE_KEY_PASSPHRASE }}

          script: |
            UNIQUE_APP_NAME="${{ secrets.UNIQUE_APP_NAME }}"  
            REPO_PATH="${{ github.repository }}" 
            DOCKER_PORT="${{ secrets.DOCKER_PORTS }}"
            cd ~/vsCodeMain


            [ -d "$UNIQUE_APP_NAME/.git" ] || git clone git@github.com:$REPO_PATH.git "$UNIQUE_APP_NAME" 
            cd "$UNIQUE_APP_NAME" 
            git fetch origin 
            git merge origin/master

            sudo docker compose down
            sudo docker compose up --build --abort-on-container-exit --exit-code-from test test 

            #* Handling docker-test errors
            EXIT_CODE=$? #$ This captures the exit code of the last command.
            if [ $EXIT_CODE -ne 0 ]; then #$ "-ne" means "not equal"
              echo "Test container failed with exit code $EXIT_CODE"
              exit $EXIT_CODE #$ This exits the ENTIRE GitHub Action with the same exit code.
            fi
            
            sudo docker compose up --build -d backend redis #$ Specify services to avoid running tests again.


            

